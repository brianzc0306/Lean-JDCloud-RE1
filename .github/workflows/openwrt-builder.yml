jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    # !!! 新增：初始化阶段清理系统残留
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        # !!! 新增：清理旧构建残留
        sudo rm -rf /workdir/openwrt  # 确保每次构建从干净环境开始

    # !!! 新增：克隆代码后检查磁盘
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD  # 克隆前检查空间
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        du -sh /workdir/openwrt  # 克隆后检查大小

    # !!! 优化：下载包后清理无效文件
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        # 增强清理：删除小于 1KB 的文件和临时锁文件
        find dl -size -1024c -exec rm -f {} \;
        find dl -name "*.lock" -exec rm -f {} \;
        # !!! 新增：下载后检查磁盘占用
        df -hT $PWD/dl

    # !!! 新增：编译前清理旧编译产物
    - name: Clean previous build
      run: |
        cd openwrt
        make clean  # 清除旧编译文件
        rm -rf ./tmp  # 删除临时目录

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        # !!! 新增：编译后立即清理中间文件
        rm -rf ./tmp ./staging_dir  # 删除编译中间文件
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    # !!! 优化：上传前深度清理
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        # !!! 新增：删除冗余文件
        rm -f *.sha256sums *.manifest  # 移除校验文件
        df -hT $PWD  # 检查最终固件大小
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    # !!! 新增：Post 阶段强制清理
    post:
      - name: Final cleanup
        if: always()  # 无论成功失败都执行
        run: |
          sudo rm -rf /workdir/openwrt/dl  # 删除下载缓存
          sudo rm -rf /workdir/openwrt/build_dir  # 清理编译目录
          df -hT  # 最终磁盘报告
