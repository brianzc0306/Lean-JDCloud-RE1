#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai
  CCACHE_DIR: /workdir/openwrt/ccache
  CCACHE_MAXSIZE: 2G

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          openwrt/dl
          ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-openwrt-${{ hashFiles('openwrt/feeds.conf.default', 'openwrt/.config') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-

    - name: Initialize environment
      run: |
        sudo apt-get -qq update
        sudo apt-get -qq install --no-install-recommends \
          build-essential ccache curl file g++-multilib gcc-multilib git \
          libncurses5-dev libssl-dev python3 python3-setuptools rsync unzip

    - name: Clone source
      working-directory: /workdir
      run: |
        git clone --depth=1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Setup ccache
      run: |
        ccache -o max_size=$CCACHE_MAXSIZE
        echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV

    - name: Build firmware
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
        make -j$(($(nproc) + 1)) download
        make -j$(($(nproc) + 1)) || make -j1 V=s

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt-Build-$(date +%Y%m%d)
        path: openwrt/bin/targets

    - name: Create release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: build-$(date +%Y.%m.%d)
        files: openwrt/bin/targets/**/*

    - name: Cleanup workflows
      uses: Mattraks/delete-workflow-runs@v2
      with:
        keep_minimum_runs: 5

    - name: Prune releases
      uses: n1hility/cancel-previous-runs@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
